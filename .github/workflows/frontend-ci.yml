name: 'Front end'

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    # Steps in the job
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: latest
    - name: Install dependencies
      run: cd solution/frontend && npm ci      
    - name: Run tests
      run: cd solution/frontend && npm test      
  lint:
    runs-on: ubuntu-latest
    # Steps in the job
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: latest
    - name: Install dependencies
      run: cd solution/frontend && npm ci      
    - name: Run lint
      run: cd solution/frontend && npm run lint
  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    environment:
      name: staging        
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: latest        
      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Get the Git SHA
      - name: Get Git SHA
        run: echo "GIT_SHA=$(echo ${{ github.sha }})"        
      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build --tag frontend:${GIT_SHA} .        
      # # Configure the AWS credentials
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
      #     aws-region: ${{ env.AWS_REGION }}
      # # Log in to Amazon ECR
      # - name: Log in to Amazon ECR
      #   run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      # # Tag the Docker image for Amazon ECR
      # - name: Tag Docker image for Amazon ECR
      #   run: docker tag frontend:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/frontend:${GIT_SHA}
      # # Push the Docker image to Amazon ECR
      # - name: Push Docker image to Amazon ECR
      #   run: docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/frontend:${GIT_SHA}          