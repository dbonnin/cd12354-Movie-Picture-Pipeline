name: 'Backend-CI'

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11    
    - name: Run Linter
      run: |
        pip install flake8
        flake8 .  
  build:
    needs: lint
    runs-on: ubuntu-latest 
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11          
    - name: Build Application
      run: |
        cd solution/backend
        pip install pipenv
        pipenv install --dev        
  test:
    needs: build
    runs-on: ubuntu-latest 
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11    
    
    - name: Install Pipenv
      run: pip install pipenv
      working-directory: solution/backend
    
    - name: Install dependencies
      run: pipenv install --dev
      working-directory: solution/backend
    
    - name: Run tests
      run: pipenv run test
      working-directory: solution/backend

    - name: Print the image tag
      run: echo "$(echo ${{ github.sha }})"        

    - name: Build Docker image
      run: |
        cd solution/backend && docker build --tag movies-backend:${{ github.sha }} .        

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

    - name: Tag Docker image for Amazon ECR
      run: docker tag movies-backend:${{ github.sha }} ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/movies-backend:${{ github.sha }}

    - name: Push Docker image to Amazon ECR
      run: docker push ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/movies-backend:${{ github.sha }}


